{"version":3,"sources":["components/FormBuilder/constants.js","components/FormBuilder/elements/TextArea.jsx","components/FormBuilder/elements/NumberInput.jsx","components/FormBuilder/elements/TextField.jsx","components/FormBuilder/elements/RadioInput.jsx","components/FormBuilder/elements/DateInput.jsx","components/FormBuilder/elements/TimeInput.jsx","components/FormBuilder/Header.jsx","components/FormBuilder/index.jsx","App.js","index.js"],"names":["formEl","label","value","TextArea","_ref","item","handleValue","deleteEl","handleRequired","handleElType","duplicateElement","_jsx","Fragment","children","_jsxs","Paper","elevation","Box","sx","textAlign","DragIndicatorIcon","transform","cursor","p","Grid","container","spacing","xs","TextField","defaultValue","variant","onBlur","e","id","fullWidth","required","placeholder","mb","disabled","multiline","rows","FormControl","InputLabel","Select","labelId","type","onChange","target","map","el","key","MenuItem","Divider","light","FormGroup","row","alignItems","Tooltip","title","aria-label","IconButton","onClick","ml","DeleteOutlineOutlinedIcon","color","FileCopyIcon","FormControlLabel","control","Switch","checked","name","NumberInput","TextFieldInput","RadioInput","addOption","handleOptionValues","deleteOption","options","length","opt","display","concat","Button","console","log","data","uuid","createNewOption","DateInput","handleDate","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","date","newDate","renderInput","params","_objectSpread","TimeInput","handleTime","TimePicker","time","newTime","Header","description","setTitle","setDescription","borderTop","FormBuilder","_formEl$","initVal","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","_useState5","_useState6","setData","_useState7","_useState8","formData","setFormData","items","prevState","filter","val","elId","elType","elIdx","findIndex","newEl","newArr","elArray","index","_toConsumableArray","slice","addAfter","newOption","objVal","dateVal","optionId","optionVal","newOptions","direction","justifyContent","md","Nestable","renderItem","_ref2","maxDepth","position","top","AddCircleOutlineOutlinedIcon","App","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a08cc03.chunk.js","sourcesContent":["export const formEl = [\n  {\n    label: \"Text\",\n    value: \"text\",\n  },\n  {\n    label: \"TextArea\",\n    value: \"textarea\",\n  },\n  {\n    label: \"Number\",\n    value: \"number\",\n  },\n  {\n    label: \"Radio\",\n    value: \"radio\",\n  },\n  {\n    label: \"Date\",\n    value: \"date\",\n  },\n  {\n    label: \"Time\",\n    value: \"time\",\n  }\n];\n","import {  Fragment } from \"react\";\n//Material UI Components\nimport TextField from \"@material-ui/core/TextField\";\nimport Box from \"@material-ui/core/Box\";\nimport Paper from \"@material-ui/core/Paper\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\n//Icons\nimport DragIndicatorIcon from \"@material-ui/icons/DragIndicator\";\nimport DeleteOutlineOutlinedIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\n\n//Form Elements\nimport { formEl } from \"../constants\";\n\nconst TextArea = ({\n  item,\n  handleValue,\n  deleteEl,\n  handleRequired,\n  handleElType,\n  duplicateElement,\n}) => {\n  return (\n    <Fragment>\n      <Paper elevation={1}>\n        <Box sx={{ textAlign: \"center\" }}>\n          <DragIndicatorIcon\n            sx={{ transform: \"rotate(-90deg)\", cursor: \"all-scroll\" }}\n          />\n        </Box>\n        <Box sx={{ p: 3 }}>\n          <Grid container spacing={1}>\n            <Grid item xs={9}>\n              <TextField\n                defaultValue={item.value}\n                variant=\"outlined\"\n                onBlur={(e) => handleValue(item.id, e)}\n                fullWidth\n                required={item.required}\n                placeholder=\"Textarea Label\"\n                sx={{ mb: 2 }}\n              />\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                placeholder=\"TextareaIInput Field\"\n                disabled\n                multiline\n                rows={3}\n              />\n            </Grid>\n            <Grid item xs={3}>\n              <FormControl fullWidth>\n                <InputLabel id=\"el-type-label\">Type</InputLabel>\n                <Select\n                  labelId=\"el-type-label\"\n                  id=\"el-type\"\n                  label=\"Type\"\n                  value={item.type}\n                  onChange={(e) => handleElType(item.id, e.target.value)}\n                >\n                  {formEl &&\n                    formEl.map((el, key) => (\n                      <MenuItem key={key} value={el.value}>\n                        {el.label}\n                      </MenuItem>\n                    ))}\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n        </Box>\n        <Divider light />\n        <FormGroup row sx={{ alignItems: \"center\" }}>\n          <Tooltip title=\"Delete Element\" aria-label=\"delete-element\">\n            <IconButton\n              aria-label=\"delete-element\"\n              onClick={() => deleteEl(item.id)}\n              sx={{ ml: 2 }}\n            >\n              <DeleteOutlineOutlinedIcon color=\"secondary\" />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Duplicate Element\" aria-label=\"duplicate-element\">\n            <IconButton\n              aria-label=\"duplicate-element\"\n              onClick={() => duplicateElement(item.id, item.type)}\n              sx={{ ml: 2 }}\n            >\n              <FileCopyIcon color=\"secondary\" />\n            </IconButton>\n          </Tooltip>\n\n          <FormControlLabel\n            control={\n              <Switch\n                checked={item.required}\n                onChange={() => handleRequired(item.id)}\n                name=\"required-field\"\n                color=\"secondary\"\n              />\n            }\n            label=\"Required\"\n            sx={{ ml: 2 }}\n          />\n        </FormGroup>\n      </Paper>\n    </Fragment>\n  );\n};\n\nexport default TextArea;\n","import {  Fragment } from \"react\";\n//Material UI Components\nimport TextField from \"@material-ui/core/TextField\";\nimport Box from \"@material-ui/core/Box\";\nimport Paper from \"@material-ui/core/Paper\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\n//Icons\nimport DragIndicatorIcon from \"@material-ui/icons/DragIndicator\";\nimport DeleteOutlineOutlinedIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\n\n//Form Elements\nimport { formEl } from \"../constants\";\n\nconst NumberInput = ({\n  item,\n  handleValue,\n  deleteEl,\n  handleRequired,\n  handleElType,\n  duplicateElement,\n}) => {\n  return (\n    <Fragment>\n      <Paper elevation={1}>\n        <Box sx={{ textAlign: \"center\" }}>\n          <DragIndicatorIcon\n            sx={{ transform: \"rotate(-90deg)\", cursor: \"all-scroll\" }}\n          />\n        </Box>\n        <Box sx={{ p: 3 }}>\n          <Grid container spacing={1}>\n            <Grid item xs={9}>\n              <TextField\n                defaultValue={item.value}\n                variant=\"outlined\"\n                onBlur={(e) => handleValue(item.id, e)}\n                fullWidth\n                required={item.required}\n                placeholder=\"Number Label\"\n                sx={{ mb: 2 }}\n              />\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                placeholder=\"Number Input Field\"\n                disabled\n                type=\"number\"\n              />\n            </Grid>\n            <Grid item xs={3}>\n              <FormControl fullWidth>\n                <InputLabel id=\"el-type-label\">Type</InputLabel>\n                <Select\n                  labelId=\"el-type-label\"\n                  id=\"el-type\"\n                  label=\"Type\"\n                  value={item.type}\n                  onChange={(e) => handleElType(item.id, e.target.value)}\n                >\n                  {formEl &&\n                    formEl.map((el, key) => (\n                      <MenuItem key={key} value={el.value}>\n                        {el.label}\n                      </MenuItem>\n                    ))}\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n        </Box>\n        <Divider light />\n        <FormGroup row sx={{ alignItems: \"center\" }}>\n          <Tooltip title=\"Delete Element\" aria-label=\"delete-element\">\n            <IconButton\n              aria-label=\"delete-element\"\n              onClick={() => deleteEl(item.id)}\n              sx={{ ml: 2 }}\n            >\n              <DeleteOutlineOutlinedIcon color=\"secondary\" />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Duplicate Element\" aria-label=\"duplicate-element\">\n            <IconButton\n              aria-label=\"duplicate-element\"\n              onClick={() => duplicateElement(item.id, item.type)}\n              sx={{ ml: 2 }}\n            >\n              <FileCopyIcon color=\"secondary\" />\n            </IconButton>\n          </Tooltip>\n\n          <FormControlLabel\n            control={\n              <Switch\n                checked={item.required}\n                onChange={() => handleRequired(item.id)}\n                name=\"required-field\"\n                color=\"secondary\"\n              />\n            }\n            label=\"Required\"\n            sx={{ ml: 2 }}\n          />\n        </FormGroup>\n      </Paper>\n    </Fragment>\n  );\n};\n\nexport default NumberInput;\n","import { useState, Fragment } from \"react\";\n//Material UI Components\nimport TextField from \"@material-ui/core/TextField\";\nimport Box from \"@material-ui/core/Box\";\nimport Paper from \"@material-ui/core/Paper\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\n//Icons\nimport DragIndicatorIcon from \"@material-ui/icons/DragIndicator\";\nimport DeleteOutlineOutlinedIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\n\n//Form Elements\nimport { formEl } from \"../constants\";\n\nconst TextFieldInput = ({ item, handleValue, deleteEl, handleRequired, handleElType,duplicateElement }) => {\n  return (\n    <Fragment>\n      <Paper elevation={1}>\n        <Box sx={{ textAlign: \"center\" }}>\n          <DragIndicatorIcon\n            sx={{ transform: \"rotate(-90deg)\", cursor: \"all-scroll\" }}\n          />\n        </Box>\n        <Box sx={{ p: 3 }}>\n          <Grid container spacing={1}>\n            <Grid item xs={9}>\n              <TextField\n                value={item.value}\n                variant=\"outlined\"\n                onChange={(e) => handleValue(item.id, e)}\n                fullWidth\n                required={item.required}\n                placeholder=\"Textfield Label\"\n                sx={{ mb: 2 }}\n              />\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                placeholder=\"Textfield Input Field\"\n                disabled\n              />\n            </Grid>\n            <Grid item xs={3}>\n              <FormControl fullWidth>\n                <InputLabel id=\"el-type-label\">Type</InputLabel>\n                <Select\n                  labelId=\"el-type-label\"\n                  id=\"el-type\"\n                  label=\"Type\"\n                  value={item.type}\n                  onChange={(e)=>handleElType(item.id,e.target.value)}\n                >\n                  {formEl &&\n                    formEl.map((el, key) => (\n                      <MenuItem key={key} value={el.value}>\n                        {el.label}\n                      </MenuItem>\n                    ))}\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n        </Box>\n        <Divider light />\n        <FormGroup row sx={{ alignItems: \"center\" }}>\n          <Tooltip title=\"Delete Element\" aria-label=\"delete-element\">\n            <IconButton\n              aria-label=\"delete-element\"\n              onClick={() => deleteEl(item.id)}\n              sx={{ ml: 2 }}\n            >\n              <DeleteOutlineOutlinedIcon color=\"secondary\" />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Duplicate Element\" aria-label=\"duplicate-element\">\n            <IconButton\n              aria-label=\"duplicate-element\"\n              onClick={() => duplicateElement(item.id, item.type)}\n              sx={{ ml: 2 }}\n            >\n              <FileCopyIcon color=\"secondary\" />\n            </IconButton>\n          </Tooltip>\n\n          <FormControlLabel\n            control={\n              <Switch\n                checked={item.required}\n                onChange={() => handleRequired(item.id)}\n                name=\"required-field\"\n                color=\"secondary\"\n              />\n            }\n            label=\"Required\"\n            sx={{ ml: 2 }}\n          />\n        </FormGroup>\n      </Paper>\n    </Fragment>\n  );\n};\n\nexport default TextFieldInput;\n","import {  Fragment } from \"react\";\nimport uuid from \"react-uuid\";\n//Material UI Components\nimport TextField from \"@material-ui/core/TextField\";\nimport Box from \"@material-ui/core/Box\";\nimport Paper from \"@material-ui/core/Paper\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Button from \"@material-ui/core/Button\";\n\n//Icons\nimport DragIndicatorIcon from \"@material-ui/icons/DragIndicator\";\nimport DeleteOutlineOutlinedIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\n\n//Form Elements\nimport { formEl } from \"../constants\";\n\nconst RadioInput = ({\n  item,\n  handleValue,\n  deleteEl,\n  handleRequired,\n  handleElType,\n  addOption,\n  handleOptionValues,\n  deleteOption,\n  duplicateElement\n}) => {\n\n  //Create new option\n  const createNewOption = (id) => {\n    console.log(id,typeof(id),\"this is id\")\n    const data = {\n      id: uuid(),\n      value: \"\",\n    };\n    addOption(id, data);\n  };\n\n  return (\n    <Fragment>\n      <Paper elevation={1}>\n        <Box sx={{ textAlign: \"center\" }}>\n          <DragIndicatorIcon\n            sx={{ transform: \"rotate(-90deg)\", cursor: \"all-scroll\" }}\n          />\n        </Box>\n        <Box sx={{ p: 3 }}>\n          <Grid container spacing={1}>\n            <Grid item xs={9}>\n              <TextField\n                defaultValue={item.value}\n                variant=\"outlined\"\n                onBlur={(e) => handleValue(item.id, e)}\n                fullWidth\n                required={item.required}\n                placeholder=\"Radio Label\"\n                sx={{ mb: 2 }}\n              />\n              {item.options &&\n                item.options.length > 0 &&\n                item.options.map((opt, key) => (\n                  <Box sx={{display:'flex'}}>\n                    <TextField\n                      variant=\"outlined\"\n                      fullWidth\n                      placeholder={`Radio Option ${key + 1}`}\n                      defaultValue={opt?.value}\n                      key={opt?.id}\n                      sx={{ mb: 1 }}\n                      onBlur={(e) =>\n                        handleOptionValues(item?.id, opt?.id, e.target.value)\n                      }\n                    />\n                    <Tooltip title=\"Delete Option\" aria-label=\"delete-option\">\n                      <IconButton\n                        aria-label=\"delete-option\"\n                        onClick={() => deleteOption(item.id,opt?.id)}\n                        sx={{ ml: 2 }}\n                      >\n                        <DeleteOutlineOutlinedIcon color=\"secondary\" />\n                      </IconButton>\n                    </Tooltip>\n                  </Box>\n                ))}\n              <Button variant=\"text\" onClick={() => createNewOption(item.id)}>\n                Add Option\n              </Button>\n            </Grid>\n            <Grid item xs={3}>\n              <FormControl fullWidth>\n                <InputLabel id=\"el-type-label\">Type</InputLabel>\n                <Select\n                  labelId=\"el-type-label\"\n                  id=\"el-type\"\n                  label=\"Type\"\n                  value={item.type}\n                  onChange={(e) => handleElType(item.id, e.target.value)}\n                >\n                  {formEl &&\n                    formEl.map((el, key) => (\n                      <MenuItem key={key} value={el.value}>\n                        {el.label}\n                      </MenuItem>\n                    ))}\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n        </Box>\n        <Divider light />\n        <FormGroup row sx={{ alignItems: \"center\" }}>\n          <Tooltip title=\"Delete Element\" aria-label=\"delete-element\">\n            <IconButton\n              aria-label=\"delete-element\"\n              onClick={() => deleteEl(item.id)}\n              sx={{ ml: 2 }}\n            >\n              <DeleteOutlineOutlinedIcon color=\"secondary\" />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Duplicate Element\" aria-label=\"duplicate-element\">\n            <IconButton\n              aria-label=\"duplicate-element\"\n              onClick={() => duplicateElement(item.id,item.type)}\n              sx={{ ml: 2 }}\n            >\n              <FileCopyIcon color=\"secondary\" />\n            </IconButton>\n          </Tooltip>\n\n          <FormControlLabel\n            control={\n              <Switch\n                checked={item.required}\n                onChange={() => handleRequired(item.id)}\n                name=\"required-field\"\n                color=\"secondary\"\n              />\n            }\n            label=\"Required\"\n            sx={{ ml: 2 }}\n          />\n        </FormGroup>\n      </Paper>\n    </Fragment>\n  );\n};\n\nexport default RadioInput;\n","import { Fragment } from \"react\";\n//Material UI Components\nimport TextField from \"@material-ui/core/TextField\";\nimport Box from \"@material-ui/core/Box\";\nimport Paper from \"@material-ui/core/Paper\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport AdapterDateFns from \"@material-ui/lab/AdapterDateFns\";\nimport LocalizationProvider from \"@material-ui/lab/LocalizationProvider\";\nimport DatePicker from \"@material-ui/lab/DatePicker\";\n//Icons\nimport DragIndicatorIcon from \"@material-ui/icons/DragIndicator\";\nimport DeleteOutlineOutlinedIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\n\n//Form Elements\nimport { formEl } from \"../constants\";\n\nconst DateInput = ({\n  item,\n  handleValue,\n  deleteEl,\n  handleRequired,\n  handleElType,\n  handleDate,\n  duplicateElement\n}) => {\n  return (\n    <Fragment>\n      <Paper elevation={1}>\n        <Box sx={{ textAlign: \"center\" }}>\n          <DragIndicatorIcon\n            sx={{ transform: \"rotate(-90deg)\", cursor: \"all-scroll\" }}\n          />\n        </Box>\n        <Box sx={{ p: 3 }}>\n          <Grid container spacing={1}>\n            <Grid item xs={9}>\n              <TextField\n                defaultValue={item.value}\n                variant=\"outlined\"\n                onBlur={(e) => handleValue(item.id, e)}\n                fullWidth\n                required={item.required}\n                placeholder=\"Date Label\"\n                sx={{ mb: 2 }}\n              />\n              <LocalizationProvider dateAdapter={AdapterDateFns}>\n                <DatePicker\n                  label=\"Select Date\"\n                  value={item?.date}\n                  onChange={(newDate) => {handleDate(item.id,newDate);}}\n                  renderInput={(params) => <TextField fullWidth {...params} />}\n                />\n              </LocalizationProvider>\n            </Grid>\n            <Grid item xs={3}>\n              <FormControl fullWidth>\n                <InputLabel id=\"el-type-label\">Type</InputLabel>\n                <Select\n                  labelId=\"el-type-label\"\n                  id=\"el-type\"\n                  label=\"Type\"\n                  value={item.type}\n                  onChange={(e) => handleElType(item.id, e.target.value)}\n                >\n                  {formEl &&\n                    formEl.map((el, key) => (\n                      <MenuItem key={key} value={el.value}>\n                        {el.label}\n                      </MenuItem>\n                    ))}\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n        </Box>\n        <Divider light />\n        <FormGroup row sx={{ alignItems: \"center\" }}>\n          <Tooltip title=\"Delete Element\" aria-label=\"delete-element\">\n            <IconButton\n              aria-label=\"delete-element\"\n              onClick={() => deleteEl(item.id)}\n              sx={{ ml: 2 }}\n            >\n              <DeleteOutlineOutlinedIcon color=\"secondary\" />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Duplicate Element\" aria-label=\"duplicate-element\">\n            <IconButton\n              aria-label=\"duplicate-element\"\n              onClick={() => duplicateElement(item.id,item.type)}\n              sx={{ ml: 2 }}\n            >\n              <FileCopyIcon color=\"secondary\" />\n            </IconButton>\n          </Tooltip>\n\n          <FormControlLabel\n            control={\n              <Switch\n                checked={item.required}\n                onChange={() => handleRequired(item.id)}\n                name=\"required-field\"\n                color=\"secondary\"\n              />\n            }\n            label=\"Required\"\n            sx={{ ml: 2 }}\n          />\n        </FormGroup>\n      </Paper>\n    </Fragment>\n  );\n};\n\nexport default DateInput;\n","import { Fragment } from \"react\";\n//Material UI Components\nimport TextField from \"@material-ui/core/TextField\";\nimport Box from \"@material-ui/core/Box\";\nimport Paper from \"@material-ui/core/Paper\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport AdapterDateFns from \"@material-ui/lab/AdapterDateFns\";\nimport LocalizationProvider from \"@material-ui/lab/LocalizationProvider\";\nimport TimePicker from \"@material-ui/lab/TimePicker\";\n//Icons\nimport DragIndicatorIcon from \"@material-ui/icons/DragIndicator\";\nimport DeleteOutlineOutlinedIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\n\n//Form Elements\nimport { formEl } from \"../constants\";\n\nconst TimeInput = ({\n  item,\n  handleValue,\n  deleteEl,\n  handleRequired,\n  handleElType,\n  handleTime,\n  duplicateElement\n}) => {\n  return (\n    <Fragment>\n      <Paper elevation={1}>\n        <Box sx={{ textAlign: \"center\" }}>\n          <DragIndicatorIcon\n            sx={{ transform: \"rotate(-90deg)\", cursor: \"all-scroll\" }}\n          />\n        </Box>\n        <Box sx={{ p: 3 }}>\n          <Grid container spacing={1}>\n            <Grid item xs={9}>\n              <TextField\n                defaultValue={item.value}\n                variant=\"outlined\"\n                onBlur={(e) => handleValue(item.id, e)}\n                fullWidth\n                required={item.required}\n                placeholder=\"Time Label\"\n                sx={{ mb: 2 }}\n              />\n              <LocalizationProvider dateAdapter={AdapterDateFns}>\n                <TimePicker\n                  label=\"Pick Time\"\n                  value={item?.time}\n                  onChange={(newTime) => handleTime(item.id, newTime)}\n                  renderInput={(params) => <TextField fullWidth {...params} />}\n                />\n              </LocalizationProvider>\n            </Grid>\n            <Grid item xs={3}>\n              <FormControl fullWidth>\n                <InputLabel id=\"el-type-label\">Type</InputLabel>\n                <Select\n                  labelId=\"el-type-label\"\n                  id=\"el-type\"\n                  label=\"Type\"\n                  value={item.type}\n                  onChange={(e) => handleElType(item.id, e.target.value)}\n                >\n                  {formEl &&\n                    formEl.map((el, key) => (\n                      <MenuItem key={key} value={el.value}>\n                        {el.label}\n                      </MenuItem>\n                    ))}\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n        </Box>\n        <Divider light />\n        <FormGroup row sx={{ alignItems: \"center\" }}>\n          <Tooltip title=\"Delete Element\" aria-label=\"delete-element\">\n            <IconButton\n              aria-label=\"delete-element\"\n              onClick={() => deleteEl(item.id)}\n              sx={{ ml: 2 }}\n            >\n              <DeleteOutlineOutlinedIcon color=\"secondary\" />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Duplicate Element\" aria-label=\"duplicate-element\">\n            <IconButton\n              aria-label=\"duplicate-element\"\n              onClick={() => duplicateElement(item.id,item.type)}\n              sx={{ ml: 2 }}\n            >\n              <FileCopyIcon color=\"secondary\" />\n            </IconButton>\n          </Tooltip>\n\n          <FormControlLabel\n            control={\n              <Switch\n                checked={item.required}\n                onChange={() => handleRequired(item.id)}\n                name=\"required-field\"\n                color=\"secondary\"\n              />\n            }\n            label=\"Required\"\n            sx={{ ml: 2 }}\n          />\n        </FormGroup>\n      </Paper>\n    </Fragment>\n  );\n};\n\nexport default TimeInput;\n","import { Fragment, useState } from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst Header = ({ title, description, setTitle, setDescription }) => {\n  return (\n    <Fragment>\n      <Box sx={{ mb: 3 }}>\n        <Paper elevation={2} sx={{ p: 3, borderTop: \"8px solid #9C27B0\" }}>\n          <TextField\n            defaultValue={title}\n            onBlur={(e) => setTitle(e.target.value)}\n            variant=\"standard\"\n            placeholder=\"Form Title\"\n            name=\"title\"\n            sx={{ mb: 3 }}\n            fullWidth\n          />\n          <TextField\n            name=\"description\"\n            defaultValue={description}\n            onBlur={(e) => setDescription(e.target.value)}\n            variant=\"standard\"\n            placeholder=\"Form Description\"\n            fullWidth\n            sx={{ mb: 2 }}\n            multiline\n            rows={2}\n          />\n        </Paper>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Header;\n","import { Fragment, useState } from \"react\";\nimport uuid from \"react-uuid\";\nimport Nestable from \"react-nestable\";\n//Material UI Components\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n//Icons\nimport AddCircleOutlineOutlinedIcon from \"@material-ui/icons/AddCircleOutlineOutlined\";\n//Form Elements\nimport {\n  TextFieldInput,\n  TextArea,\n  NumberInput,\n  RadioInput,\n  DateInput,\n  TimeInput,\n} from \"./elements\";\nimport Layout from './elements/layout'\nimport { formEl } from \"./constants.js\";\n//Components\nimport Header from \"./Header\";\n\nconst FormBuilder = () => {\n  const initVal = formEl[0]?.value;\n\n  //State\n  const [title, setTitle] = useState(\"Untitled Form\");\n  const [description, setDescription] = useState(\"\");\n  const [data, setData] = useState([]);\n  const [formData, setFormData] = useState(\"text\");\n\n  const items = data;\n\n  //Function to add new element\n  const addElement = () => {\n    const data = {\n      id: uuid(),\n      value: null,\n      type: formData,\n      required: false,\n    };\n    setData((prevState) => [...prevState, data]);\n    setFormData(initVal);\n  };\n\n  //Function to delete element\n  const deleteEl = (id) => {\n    setData((prevState) => prevState.filter((val) => val.id !== id));\n  };\n\n  //Function to add element at specific pos and return arr\n  const addAfter = (elArray, index, newEl) => {\n    return [...elArray.slice(0, index+1), newEl, ...elArray.slice(index+1)];\n  };\n\n  //Function to duplicate element\n  const duplicateElement = (elId, elType) => {\n    let elIdx = data.findIndex( (el) =>el.id === elId);\n    let newEl = {\n      id: uuid(),\n      value: null,\n      type: elType,\n      required: false,\n    }\n    let newArr = addAfter(data,elIdx,newEl)\n    setData(newArr)\n  };\n\n  //Function to handle sorting of elements\n  const handleOnChangeSort = ({ items }) => {\n    setData(items);\n  };\n\n  //Function to Handle Input Values\n  const handleValue = (id, e) => {\n    let newArr = data.map((el) => {\n      if (el.id === id) {\n        return { ...el, value: e.target.value };\n      } else {\n        return el;\n      }\n    });\n    setData(newArr);\n  };\n\n  //Function to Handle Required\n  const handleRequired = (id) => {\n    let newArr = data.map((el) => {\n      if (el.id === id) {\n        return { ...el, required: !el.required };\n      } else {\n        return el;\n      }\n    });\n    setData(newArr);\n  };\n\n  //Function to Handle Element Type\n  const handleElType = (id, type) => {\n    let newArr = data.map((el) => {\n      if (el.id === id) {\n        return { ...el, type: type };\n      } else {\n        return el;\n      }\n    });\n    setData(newArr);\n  };\n\n  //Function to Handle Options\n  const addOption = (id, newOption) => {\n    let newArr = data.map((el) => {\n      if (el.id === id) {\n        const objVal = \"options\" in el ? el?.options : [];\n        return { ...el, options: [...objVal, newOption] };\n      } else {\n        return el;\n      }\n    });\n    setData(newArr);\n  };\n\n  //Function to Handle Date\n  const handleDate = (id, dateVal) => {\n    let newArr = data.map((el) => {\n      if (el.id === id) {\n        return { ...el, date: dateVal };\n      } else {\n        return el;\n      }\n    });\n    setData(newArr);\n  };\n\n  //Function to Handle Time\n  const handleTime = (id, dateVal) => {\n    let newArr = data.map((el) => {\n      if (el.id === id) {\n        return { ...el, time: dateVal };\n      } else {\n        return el;\n      }\n    });\n    setData(newArr);\n  };\n\n  //Function to Change Option Values\n  const handleOptionValues = (elId, optionId, optionVal) => {\n    let newArr = data.map((el) => {\n      if (el.id === elId) {\n        el?.options &&\n          el?.options.map((opt) => {\n            if (opt.id === optionId) {\n              opt.value = optionVal;\n            }\n          });\n        return el;\n      } else {\n        return el;\n      }\n    });\n    setData(newArr);\n  };\n\n  //Function to Delete Optin\n  const deleteOption = (elId, optionId) => {\n    let newArr = data.map((el) => {\n      if (el.id === elId) {\n        let newOptions =\n          el?.options && el?.options.filter((opt) => opt.id !== optionId);\n        return { ...el, options: newOptions };\n      } else {\n        return el;\n      }\n    });\n    setData(newArr);\n  };\n\n  //Render items\n  const renderElements = ({ item }) => {\n    switch (item.type) {\n      case \"text\":\n        return (\n          <TextFieldInput\n            item={item}\n            handleValue={handleValue}\n            deleteEl={deleteEl}\n            handleRequired={handleRequired}\n            handleElType={handleElType}\n            duplicateElement={duplicateElement}\n          />\n        );\n      case \"textarea\":\n        return (\n          <TextArea\n            item={item}\n            handleValue={handleValue}\n            deleteEl={deleteEl}\n            handleRequired={handleRequired}\n            handleElType={handleElType}\n            duplicateElement={duplicateElement}\n          />\n        );\n      case \"number\":\n        return (\n          <NumberInput\n            item={item}\n            handleValue={handleValue}\n            deleteEl={deleteEl}\n            handleRequired={handleRequired}\n            handleElType={handleElType}\n            duplicateElement={duplicateElement}\n          />\n        );\n      case \"radio\":\n        return (\n          <RadioInput\n            item={item}\n            handleValue={handleValue}\n            deleteEl={deleteEl}\n            handleRequired={handleRequired}\n            handleElType={handleElType}\n            addOption={addOption}\n            handleOptionValues={handleOptionValues}\n            deleteOption={deleteOption}\n            duplicateElement={duplicateElement}\n          />\n        );\n      case \"date\":\n        return (\n          <DateInput\n            item={item}\n            handleValue={handleValue}\n            deleteEl={deleteEl}\n            handleRequired={handleRequired}\n            handleElType={handleElType}\n            handleDate={handleDate}\n            duplicateElement={duplicateElement}\n          />\n        );\n      case \"time\":\n        return (\n          <TimeInput\n            item={item}\n            handleValue={handleValue}\n            deleteEl={deleteEl}\n            handleRequired={handleRequired}\n            handleElType={handleElType}\n            handleTime={handleTime}\n            duplicateElement={duplicateElement}\n          />\n        );\n      default:\n        return <Fragment></Fragment>;\n    }\n  };\n\n  console.log(data);\n\n  return (\n    <Fragment>\n      <Grid container spacing={1} direction=\"row\" justifyContent=\"center\">\n        <Grid item md={6}>\n          <Header\n            title={title}\n            setTitle={setTitle}\n            description={description}\n            setDescription={setDescription}\n          />\n          <Nestable\n            items={items}\n            renderItem={renderElements}\n            maxDepth={1}\n            onChange={handleOnChangeSort}\n          />\n        </Grid>\n        <Grid item md={1}>\n          <Tooltip title=\"Add Element\" aria-label=\"add-element\">\n            <IconButton\n              aria-label=\"add-element\"\n              onClick={addElement}\n              sx={{ position: \"sticky\", top: 30 }}\n            >\n              <AddCircleOutlineOutlinedIcon color=\"secondary\" />\n            </IconButton>\n          </Tooltip>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\nexport default FormBuilder;\n","import { Fragment } from \"react\";\nimport FormBuilder from \"@components/FormBuilder\";\nimport \"react-nestable/dist/styles/index.css\";\nconst App = () => {\n  return (\n    <Fragment>\n        <FormBuilder />\n    </Fragment>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}